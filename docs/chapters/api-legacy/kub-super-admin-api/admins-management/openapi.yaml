openapi: 3.1.0
info:
  title: KUB [Super Admin] Admins API
  description: Super Admin API for managing admins on KUB Education platform
  version: 1.0-dev
servers:
  - url: https://stage.superadmin.api.kub.education
    description: Stage Server

paths:
  /admins:
    post:
      operationId: createAdmin
      summary: Create new admin
      description: Creates a new admin with the provided details.
      security:
        - X-SUPER-ADMIN-KEY: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminRequest"
            examples:
              default:
                value:
                  last_name: "Doe"
                  first_name: "John"
                  middle_name: ""
                  email: "john.doe@example.com"
      responses:
        "201":
          description: Admin created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminResponse"
        "400":
          description: Bad request (Wrong request parameters)
        "401":
          description: Unauthorized (Wrong header)
        "409":
          description: Conflict (User exists)
        "422":
          description: Unprocessable Entity (Validation error)
    get:
      operationId: getAdmins
      summary: Get admins
      description: Retrieves a list of admins.
      security:
        - X-SUPER-ADMIN-KEY: []
      responses:
        "200":
          description: Successful retrieval of admins.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdminResponse"
        "401":
          description: Unauthorized (Wrong header)

  /admins/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      operationId: getAdmin
      summary: Get admin
      description: Retrieves details of a specific admin.
      security:
        - X-SUPER-ADMIN-KEY: []
      responses:
        "200":
          description: Successful retrieval of the admin.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminResponse"
        "400":
          description: Bad request (Wrong request parameters)
        "401":
          description: Unauthorized (Wrong header)
        "404":
          description: Not Found (Admin not found)
    put:
      operationId: updateAdmin
      summary: Edit admin
      description: Updates an admin's details.
      security:
        - X-SUPER-ADMIN-KEY: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUpdateRequest"
            examples:
              default:
                value:
                  last_name: "Smith"
                  first_name: "Alice"
                  middle_name: ""
                  email: "alice.smith@example.com"
      responses:
        "200":
          description: Successful update of the admin.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminResponse"
        "400":
          description: Bad request (Wrong request parameters)
        "401":
          description: Unauthorized (Wrong header)
        "422":
          description: Unprocessable Entity (Validation error)
        "404":
          description: Not Found (Admin not found)
    delete:
      operationId: deleteAdmin
      summary: Delete admin
      description: Deletes an admin.
      security:
        - X-SUPER-ADMIN-KEY: []
      responses:
        "204":
          description: No content (Successfully deleted)
        "400":
          description: Bad request (Wrong request parameters)
        "401":
          description: Unauthorized (Wrong header)
        "404":
          description: Not Found (Admin not found)

  /admins/{id}/resend:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    post:
      operationId: resendAdmin
      summary: Resend admin password
      description: Resends password to the admin email. Returns 503 if the SMTP component fails.
      security:
        - X-SUPER-ADMIN-KEY: []
      responses:
        "200":
          description: Successful password resend.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminResponse"
        "400":
          description: Bad request (Wrong request parameters)
        "401":
          description: Unauthorized (Wrong header)
        "404":
          description: Not Found (Admin not found)
        "503":
          description: Service Unavailable (SMTP failure)

components:
  securitySchemes:
    X-SUPER-ADMIN-KEY:
      type: apiKey
      in: header
      name: X-SUPER-ADMIN-KEY

  schemas:
    AdminRequest:
      type: object
      required:
        - last_name
        - first_name
        - email
      properties:
        last_name:
          type: string
          minLength: 1
          maxLength: 32
          pattern: "^(?=.{1,32}$)[A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+(?:[-'ʼ][A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+)*$"
          description: "Must contain only English or Ukrainian letters, dash, and apostrophe; max 32 characters. Russian-specific letters (Ы, Э) are not allowed."
          example: "Doe"
        first_name:
          type: string
          minLength: 1
          maxLength: 32
          pattern: "^(?=.{1,32}$)[A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+(?:[-'ʼ][A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+)*$"
          description: "Must contain only English or Ukrainian letters, dash, and apostrophe; max 32 characters. Russian-specific letters (Ы, Э) are not allowed."
          example: "John"
        middle_name:
          type: string
          minLength: 0
          maxLength: 32
          pattern: "^$|^(?=.{1,32}$)[A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+(?:[-'ʼ][A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+)*$"
          description: "Optional. If provided, must contain only English or Ukrainian letters, dash, and apostrophe; max 32 characters. Russian-specific letters (Ы, Э) are not allowed."
          example: "Edward"
        email:
          type: string
          format: email
          maxLength: 64
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
          description: "Must be a valid email address."
          example: "john.doe@example.com"

    AdminUpdateRequest:
      type: object
      properties:
        last_name:
          type: string
          minLength: 1
          maxLength: 32
          pattern: "^(?=.{1,32}$)[A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+(?:[-'ʼ][A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+)*$"
          description: "Must contain only English or Ukrainian letters, dash, and apostrophe; max 32 characters. Russian-specific letters (Ы, Э) are not allowed."
          example: "Smith"
        first_name:
          type: string
          minLength: 1
          maxLength: 32
          pattern: "^(?=.{1,32}$)[A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+(?:[-'ʼ][A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+)*$"
          description: "Must contain only English or Ukrainian letters, dash, and apostrophe; max 32 characters. Russian-specific letters (Ы, Э) are not allowed."
          example: "Alice"
        middle_name:
          type: string
          minLength: 0
          maxLength: 32
          pattern: "^$|^(?=.{0,32}$)[A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+(?:[-'ʼ][A-Za-zАБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]+)*$"
          description: "Optional. If provided, must contain only English or Ukrainian letters, dash, and apostrophe; max 32 characters. Russian-specific letters (Ы, Э) are not allowed."
          example: ""
        email:
          type: string
          format: email
          maxLength: 64
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
          description: "Must be a valid email address."
          example: "alice.smith@example.com"

    AdminResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        user_id:
          type: integer
          format: int64
          example: 1001
        last_name:
          type: string
          example: "Doe"
        first_name:
          type: string
          example: "John"
        middle_name:
          type: string
          example: "Edward"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        user_status:
          type: string
          example: "ACTIVATION_PENDING"
